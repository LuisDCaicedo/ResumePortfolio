Parameters:

    EnvironmentName:
      Description: An environment name that will be prefixed to resources
      Type: String

    VpcCIDR:
      Description: Enter VPC Cidr IP range
      Type: String
      Default: 10.0.0.0/16
    
    PublicSubnet1CIDR:
        Description: Enter Subnet IP range
        Type: String
        Default: 10.0.0.0/24
    PublicSubnet2CIDR:
        Description: Enter Subnet IP range
        Type: String
        Default: 10.0.1.0/24
    PrivateSubnet1CIDR:
        Description: Enter Subnet IP range
        Type: String
        Default: 10.0.2.0/24
    PrivateSubnet2CIDR:
        Description: Enter Subnet IP range
        Type: String
        Default: 10.0.3.0/24


Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties: 
          CidrBlock: !Ref VpcCIDR
          EnableDnsHostnames: True
          Tags:
              - Key: Name
                Value: !Ref EnvironmentName
    UdacityIGW:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: !Ref EnvironmentName
    AttachGateway:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref VPC
        InternetGatewayId: !Ref UdacityIGW
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone: !Select [ 0, !GetAZs '']
          CidrBlock: !Ref PublicSubnet1CIDR
          VpcId: !Ref VPC
          MapPublicIpOnLaunch: True
          Tags: 
            - Key: Name
              Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone: !Select [ 1, !GetAZs '']
          CidrBlock: !Ref PublicSubnet2CIDR
          VpcId: !Ref VPC
          MapPublicIpOnLaunch: True
          Tags: 
            - Key: Name
              Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone: !Select [ 0, !GetAZs '']
          CidrBlock: !Ref PrivateSubnet1CIDR
          VpcId: !Ref VPC
          MapPublicIpOnLaunch: false
          Tags: 
            - Key: Name
              Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone: !Select [ 1, !GetAZs '']
          CidrBlock: !Ref PrivateSubnet2CIDR
          VpcId: !Ref VPC
          MapPublicIpOnLaunch: false
          Tags: 
            - Key: Name
              Value: !Sub ${EnvironmentName} Private Subnet (AZ2)
    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: AttachGateway
        Properties:
          Domain: vpc
    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: AttachGateway
        Properties:
          Domain: vpc
    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
          AllocationId: !GetAtt NatGateway1EIP.AllocationId
          SubnetId: !Ref PublicSubnet1
    NatGateway2: 
        Type: AWS::EC2::NatGateway
        Properties:
          AllocationId: !GetAtt NatGateway2EIP.AllocationId
          SubnetId: !Ref PublicSubnet2
    PublicRouteTable: 
        Type: AWS::EC2::RouteTable
        Properties:
          VpcId: !Ref VPC 
          Tags:  
             - Key: Name
               Value: !Sub ${EnvironmentName} Public Routes
    DefaultPublicRoute: 
        Type: AWS::EC2::Route 
        DependsOn: AttachGateway
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref UdacityIGW
    PublicSubnet1RoutableAssocation: 
          Type: AWS::EC2::SubnetRouteTableAssociation
          Properties:
            SubnetId: !Ref PublicSubnet1
            RouteTableId: !Ref PublicRouteTable
    PublicSubnet2RoutableAssocation: 
          Type: AWS::EC2::SubnetRouteTableAssociation
          Properties:
            RouteTableId: !Ref PublicRouteTable   
            SubnetId: !Ref PublicSubnet2       
    PrivateRouteTable1:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Private Routes (AZ1)
    DefaultPrivateRoute1:
      Type: AWS::EC2::Route
      Properties:
         RouteTableId: !Ref PrivateRouteTable1
         DestinationCidrBlock: 0.0.0.0/0
         NatGatewayId: !Ref NatGateway1
    PrivateSubnet1RouteTableAssocation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
         SubnetId: !Ref PrivateSubnet1
         RouteTableId: !Ref PrivateRouteTable1
    PrivateRouteTable2:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Private Routes (AZ2)
    DefaultPrivateRoute2:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PrivateRouteTable2
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGateway2
    PrivateSubnet2RouteTableAssocation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
         SubnetId: !Ref PrivateSubnet2
         RouteTableId: !Ref PrivateRouteTable2

Outputs:

    VPC:
        Description: A reference to the created VPC
        Value: !Ref VPC 
        Export: 
            Name: !Sub ${EnvironmentName}-VPCID 
    
    VPCPublicRouteTable: 
        Description: Public Routing 
        Value: !Ref PublicRouteTable
        Export: 
            Name: !Sub ${EnvironmentName}-PUB-RT
    
    VPCPrivateRouteTable1:
        Description: Private Routing AZ1
        Value: !Ref PrivateRouteTable1
        Export:
            Name: !Sub ${EnvironmentName}-PRI1-RT

    VPCPrivateRouteTable2:
        Description: Private Routing AZ2
        Value: !Ref PrivateRouteTable2
        Export:
            Name: !Sub ${EnvironmentName}-PRI2-RT

    PublicSubnets: 
        Description: A list of public subnets 
        Value: !Join [",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ] ]
        Export: 
          Name: !Sub ${EnvironmentName}-PUB-NETS

    PrivateSubnets: 
        Description: A list of private subnets 
        Value: !Join [",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ] ]
        Export: 
          Name: !Sub ${EnvironmentName}-PRIV-NETS
    PublicSubnet1: 
        Description: Reference to Public Subnet in AZ1 
        Value: !Ref PublicSubnet1 
        Export: 
          Name: !Sub ${EnvironmentName}-PUB1-SN
    PublicSubnet2: 
        Description: Reference to Public Subnet in AZ2
        Value: !Ref PublicSubnet2 
        Export: 
          Name: !Sub ${EnvironmentName}-PUB2-SN
    PrivateSubnet1: 
        Description: Reference to Private Subnet in AZ1 
        Value: !Ref PrivateSubnet1 
        Export: 
          Name: !Sub ${EnvironmentName}-PRI1-SN
    PrivateSubnet2: 
        Description: Reference to Private Subnet in AZ2
        Value: !Ref PrivateSubnet2
        Export: 
          Name: !Sub ${EnvironmentName}-PRI2-SN